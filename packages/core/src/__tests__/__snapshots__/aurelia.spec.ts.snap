// Vitest Snapshot v1

exports[`Aurelia > jsx > Typescript Test > Basic 1`] = `
"import { NgModule } from \\"@aurelia/core\\";
import { CommonModule } from \\"@aurelia/common\\";

import { Component } from \\"@aurelia/core\\";

export interface MyBasicComponentProps {
  id: string;
}

export const DEFAULT_VALUES = {
  name: \\"Steve\\",
};

@inlineView({
  selector: \\"my-basic-component, MyBasicComponent\\",
  template: \`
       <div class=\\"test div\\">
         <input
           [attr.value]=\\"DEFAULT_VALUES.name || name\\"
           (input)=\\"name = $event.target.value\\"
         />

         Hello! I can run in React, Vue, Solid, or Liquid!
       </div>

       \`,
  styles: [
    \`.div {
         padding: 10px;
       }
\`,
  ],
})
export class MyBasicComponent {
  DEFAULT_VALUES = DEFAULT_VALUES;

  name = \\"Steve\\";
  underscore_fn_name() {
    return \\"bar\\";
  }
  age = 1;
  sports = [\\"\\"];
}

@NgModule({
  declarations: [MyBasicComponent],
  imports: [CommonModule],
  exports: [MyBasicComponent],
})
export class MyBasicComponentModule {}
"
`;

exports[`Aurelia > svelte > Typescript Test > ifElse 1`] = `
"import { NgModule } from \\"@aurelia/core\\";
import { CommonModule } from \\"@aurelia/common\\";

import { Component } from \\"@aurelia/core\\";

@inlineView({
  selector: \\"my-component, MyComponent\\",
  template: \`
       <ng-container *ngIf=\\"show\\">
         <button (click)=\\"toggle($event)\\">Hide</button>
       </ng-container>

       \`,
})
export class MyComponent {
  show = true;
  toggle = function toggle() {
    this.show = !this.show;
  };
}

@NgModule({
  declarations: [MyComponent],
  imports: [CommonModule],
  exports: [MyComponent],
})
export class MyComponentModule {}
"
`;
